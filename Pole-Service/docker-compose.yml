version: '2.2'

networks:
  my-network:
    driver: bridge

services:

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    networks:
      - my-network
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  eureka:
    image: ghadamejrii/eureka:latest
    container_name: eureka
    ports:
      - "8761:8761"
    networks:
      - my-network
    environment:
      EUREKA_CLIENT_REGISTER_WITH_EUREKA: "false"
      EUREKA_CLIENT_FETCH_REGISTRY: "false"

  gateway:
    image: ghadamejrii/gateway:latest
    container_name: gateway
    ports:
      - "8083:8083"
    networks:
      - my-network
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka:8761/eureka/
    depends_on:
      - eureka

  pole-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pole-service
    ports:
      - "8089:8089"
    networks:
      - my-network
    environment:
      SPRING_APPLICATION_NAME: Pole-Service
      SPRING_DATA_MONGODB_HOST: mongodb
      SPRING_DATA_MONGODB_PORT: 27017
      SERVER_PORT: 8089
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: "true"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka:8761/eureka/
      EUREKA_CLIENT_REGISTER_WITH_EUREKA: "true"
      EUREKA_CLIENT_FETCH_REGISTRY: "true"
    depends_on:
      - mongodb
      - eureka

volumes:
  mongo_data:
    driver: local
